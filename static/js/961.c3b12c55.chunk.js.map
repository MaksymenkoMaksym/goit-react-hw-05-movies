{"version":3,"file":"static/js/961.c3b12c55.chunk.js","mappings":"qMAEMA,EAAY,+BAEHC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAA0BC,EAA1B,+BAAgC,uBAAwBC,EAAxD,uBACQC,EAAS,CACbF,IAAKA,EACLG,OAAQ,MACRC,QAASN,EACTG,QAAO,QACLI,QAAS,mCACTC,MAAO,GACPC,KAAM,GACHN,GAELO,aAAc,QAXlB,kBAc2BC,IAAMP,GAdjC,cAcUQ,EAdV,yBAeWA,GAfX,+HAqBA,IAvBA,WAEeX,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,mICiGf,UA1FqB,WAAO,IAAD,IACjBY,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,YACRC,EAAgB,mCAAG,gHAEExB,EAAAA,EAAAA,GAAW,SAAD,OAAUY,IAFtB,gBAEba,EAFa,EAEbA,KACRT,EAASS,GAHY,gDAKrBC,MAAM,EAAD,IALgB,yDAAH,qDAShBC,EAAc,SAAAC,GAClB,GAAKT,EAASU,SAASC,SAASF,GAAhC,CAIA,IAAMG,EAAUZ,EAASU,SAASG,QAAQJ,EAAO,IACjDX,EAAS,GAAD,OAAIc,GAFX,MAFCd,EAAS,WAAD,OAAYL,EAAZ,YAAkBgB,GAM7B,EAOD,IALAK,EAAAA,EAAAA,YAAU,WACRT,GAED,GAAE,CAACL,IAECJ,EAIL,OACE,4BACE,SAAC,KAAD,CAAMmB,GAAIb,EAAV,UACG,SAAC,MAAD,CAAmBc,KAAM,OAAQC,MAAO,cAE3C,wBAAKrB,EAAMsB,kBACX,0BACE,gBACEC,IAAG,yCAAoCvB,EAAMwB,aAC7CC,IAAKzB,EAAMsB,eACXI,MAAO,QACPC,OAAQ,aAGZ,0CAAkB3B,EAAM4B,iBACxB,sCACA,uBAAI5B,EAAM6B,YACV,oCACA,uBAAI7B,EAAM8B,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,KAAO,IAAd,OACvB,4BACE,6CACA,2BACE,eACEC,MAAO,CAAEC,OAAQ,UAAWd,MAAO,QACnCe,QAAS,kBAAMxB,EAAY,OAAlB,EAFX,mBAaA,eACEsB,MAAO,CAAEC,OAAQ,UAAWd,MAAO,QACnCe,QAAS,kBAAMxB,EAAY,UAAlB,EAFX,4BAeJ,SAAC,KAAD,MAGL,C","sources":["helpers/helpers.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst END_POINT = 'https://api.themoviedb.org/3';\n\nasync function getApiData(url = '/trending/movie/day?', params) {\n  const config = {\n    url: url,\n    method: 'get',\n    baseURL: END_POINT,\n    params: {\n      api_key: '3fc6ca0bd9b1eeabb3151f08c61a1e25',\n      query: '',\n      page: 1,\n      ...params,\n    },\n    responseType: 'json',\n  };\n  try {\n    const response = await axios(config);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default getApiData;\n","import {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { AiOutlineRollback } from 'react-icons/ai';\nimport getApiData from 'helpers/helpers';\nimport { useEffect, useState } from 'react';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? `/`;\n  const getMoviesDetails = async () => {\n    try {\n      const { data } = await getApiData(`movie/${id}`);\n      setMovie(data);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const collectInfo = place => {\n    if (!location.pathname.includes(place)) {\n      navigate(`/movies/${id}/${place}`);\n      return;\n    }\n    const address = location.pathname.replace(place, '');\n    navigate(`${address}`);\n    return;\n  };\n\n  useEffect(() => {\n    getMoviesDetails();\n    // eslint-disable-next-line\n  }, [location]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <div>\n      <Link to={backLink}>\n        {<AiOutlineRollback size={'60px'} color={'orange'} />}\n      </Link>\n      <h1>{movie.original_title}</h1>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.original_title}\n          width={'200px'}\n          height={'300px'}\n        />\n      </div>\n      <p>User scores : {movie.vote_average}</p>\n      <h3>Overview</h3>\n      <p>{movie.overview}</p>\n      <h3>Genres</h3>\n      <p>{movie.genres.map(el => el.name + '  ')}</p>\n      <div>\n        <h4>Additional info</h4>\n        <ul>\n          <li\n            style={{ cursor: 'pointer', color: 'blue' }}\n            onClick={() => collectInfo('cast')}\n          >\n            Cast\n            {/* <Link\n              to={`/movies/${id}/cast`}\n              // onClick={() => collectInfo('cast')}\n              state={{ from: `/movies/${id}` }}\n            >\n              Cast\n            </Link> */}\n          </li>\n          <li\n            style={{ cursor: 'pointer', color: 'blue' }}\n            onClick={() => collectInfo('reviews')}\n          >\n            Reviews\n            {/* <Link\n              to={`/movies/${id}/reviews`}\n              // onClick={() => collectInfo('reviews')}\n              state={{ from: `/movies/${id}` }}\n            >\n              Reviews\n            </Link> */}\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["END_POINT","getApiData","url","params","config","method","baseURL","api_key","query","page","responseType","axios","response","id","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","backLink","state","from","getMoviesDetails","data","alert","collectInfo","place","pathname","includes","address","replace","useEffect","to","size","color","original_title","src","poster_path","alt","width","height","vote_average","overview","genres","map","el","name","style","cursor","onClick"],"sourceRoot":""}