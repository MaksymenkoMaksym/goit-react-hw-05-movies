{"version":3,"file":"static/js/186.b6e48904.chunk.js","mappings":"8NA8CA,UAzCgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,GAAW,SAAD,OAAUN,EAAV,aAFlB,gBAEPO,EAFO,EAEPA,KACRH,EAAWG,EAAKC,SAHD,gDAKfC,MAAM,EAAD,IALU,yDAAH,qDAchB,IALAC,EAAAA,EAAAA,YAAU,WACRL,GAED,GAAE,IAEEF,EAIL,OAAuB,IAAnBA,EAAQQ,QACH,kEAIP,wBACGR,GACCA,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAZ,OACV,yBACE,4BACE,wBAAKA,KACL,6BAAKD,SAHAC,EADC,KAUnB,C,qFC1CKC,EAAY,+BAEHT,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAA0BU,EAA1B,+BAAgC,uBAAwBC,EAAxD,uBACQC,EAAS,CACbF,IAAKA,EACLG,OAAQ,MACRC,QAASL,EACTE,QAAO,QACLI,QAAS,mCACTC,MAAO,GACPC,KAAM,GACHN,GAELO,aAAc,QAXlB,kBAc2BC,IAAMP,GAdjC,cAcUQ,EAdV,yBAeWA,GAfX,+HAqBA,IAvBA,WAEepB,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C","sources":["components/Reviews/Reviews.jsx","helpers/helpers.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport getApiData from 'helpers/helpers';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  const getReviews = async () => {\n    try {\n      const { data } = await getApiData(`movie/${id}/reviews`);\n      setReviews(data.results);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getReviews();\n    // eslint-disable-next-line\n  }, []);\n\n  if (!reviews) {\n    return;\n  }\n\n  if (reviews.length === 0) {\n    return <p>We don`t have reviews for this movies</p>;\n  }\n\n  return (\n    <ul>\n      {reviews &&\n        reviews.map(({ content, author }) => (\n          <li key={author}>\n            <div>\n              <h4>{author}</h4>\n              <p> {content}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst END_POINT = 'https://api.themoviedb.org/3';\n\nasync function getApiData(url = '/trending/movie/day?', params) {\n  const config = {\n    url: url,\n    method: 'get',\n    baseURL: END_POINT,\n    params: {\n      api_key: '3fc6ca0bd9b1eeabb3151f08c61a1e25',\n      query: '',\n      page: 1,\n      ...params,\n    },\n    responseType: 'json',\n  };\n  try {\n    const response = await axios(config);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default getApiData;\n"],"names":["id","useParams","useState","reviews","setReviews","getReviews","getApiData","data","results","alert","useEffect","length","map","content","author","END_POINT","url","params","config","method","baseURL","api_key","query","page","responseType","axios","response"],"sourceRoot":""}