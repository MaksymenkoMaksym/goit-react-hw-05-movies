{"version":3,"file":"static/js/961.7e82ede3.chunk.js","mappings":"gMAOA,E,QALYA,GAAAA,IAAH,uE,SCiBT,EAhBe,kBACb,SAAC,EAAD,WACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,iBARJ,C,qFCDTC,EAAY,+BAEHC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAA0BC,EAA1B,+BAAgC,uBAAwBC,EAAxD,uBACQC,EAAS,CACbF,IAAKA,EACLG,OAAQ,MACRC,QAASN,EACTG,QAAO,QACLI,QAAS,mCACTC,MAAO,GACPC,KAAM,GACHN,GAELO,aAAc,QAXlB,kBAc2BC,IAAMP,GAdjC,cAcUQ,EAdV,yBAeWA,GAfX,+HAqBA,IAvBA,WAEeX,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,6ICuEf,UArEqB,WAAO,IAAD,IACjBY,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,YACRC,EAAgB,mCAAG,gHAEEtB,EAAAA,EAAAA,GAAW,SAAD,OAAUY,IAFtB,gBAEbW,EAFa,EAEbA,KACRP,EAASO,GAHY,gDAKrBC,MAAM,EAAD,IALgB,yDAAH,qDAShBC,EAAc,SAAAC,GAClB,OAAKT,EAASU,SAASC,SAASF,GAGhBT,EAASU,SAASE,QAAQH,EAAO,IAFzC,WAAN,OAAkBd,EAAlB,YAAwBc,EAI3B,EAOD,OALAI,EAAAA,EAAAA,YAAU,WACRR,GAED,GAAE,CAACL,IAEGF,GACL,4BACE,SAAC,KAAD,CAAMgB,GAAIZ,EAAV,UACG,SAAC,MAAD,CAAmBa,KAAM,OAAQC,MAAO,cAE3C,wBAAKlB,EAAMmB,kBACX,0BACE,gBACEC,IAAG,yCAAoCpB,EAAMqB,aAC7CC,IAAKtB,EAAMmB,eACXvC,MAAO,QACPD,OAAQ,aAGZ,0CAAkBqB,EAAMuB,iBACxB,sCACA,uBAAIvB,EAAMwB,YACV,oCACA,uBAAIxB,EAAMyB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,KAAO,IAAd,OACvB,4BACE,6CACA,2BACE,eAAIC,MAAO,CAAEC,OAAQ,UAAWZ,MAAO,QAAvC,UACE,SAAC,KAAD,CAAMF,GAAIN,EAAY,QAASL,MAAO,CAAEC,KAAK,WAAD,OAAaT,IAAzD,qBAIF,eAAIgC,MAAO,CAAEC,OAAQ,UAAWZ,MAAO,QAAvC,UACE,SAAC,KAAD,CAAMF,GAAIN,EAAY,WAAYL,MAAO,CAAEC,KAAK,WAAD,OAAaT,IAA5D,8BAMN,SAAC,KAAD,QAGF,SAAC,IAAD,GAEH,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","helpers/helpers.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Div = styled.div`\n  margin-left: auto;\n\n  margin-right: auto;\n`;\nexport default Div;\n","// import PropTypes from 'prop-types'; // ES6\nimport { Dna } from 'react-loader-spinner';\nimport Div from './Loader.styled';\nconst Loader = () => (\n  <Div>\n    <Dna\n      visible={true}\n      height=\"800\"\n      width=\"800\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  </Div>\n);\n\n// Loader.propTypes = {\n//   isLoading: PropTypes.bool.isRequired,\n// };\nexport default Loader;\n","import axios from 'axios';\n\nconst END_POINT = 'https://api.themoviedb.org/3';\n\nasync function getApiData(url = '/trending/movie/day?', params) {\n  const config = {\n    url: url,\n    method: 'get',\n    baseURL: END_POINT,\n    params: {\n      api_key: '3fc6ca0bd9b1eeabb3151f08c61a1e25',\n      query: '',\n      page: 1,\n      ...params,\n    },\n    responseType: 'json',\n  };\n  try {\n    const response = await axios(config);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default getApiData;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { AiOutlineRollback } from 'react-icons/ai';\nimport getApiData from 'helpers/helpers';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Loader';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? `/`;\n  const getMoviesDetails = async () => {\n    try {\n      const { data } = await getApiData(`movie/${id}`);\n      setMovie(data);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  const collectInfo = place => {\n    if (!location.pathname.includes(place)) {\n      return `/movies/${id}/${place}`;\n    }\n    const address = location.pathname.replace(place, '');\n    return address;\n  };\n\n  useEffect(() => {\n    getMoviesDetails();\n    // eslint-disable-next-line\n  }, [location]);\n\n  return movie ? (\n    <div>\n      <Link to={backLink}>\n        {<AiOutlineRollback size={'60px'} color={'orange'} />}\n      </Link>\n      <h1>{movie.original_title}</h1>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.original_title}\n          width={'200px'}\n          height={'300px'}\n        />\n      </div>\n      <p>User scores : {movie.vote_average}</p>\n      <h3>Overview</h3>\n      <p>{movie.overview}</p>\n      <h3>Genres</h3>\n      <p>{movie.genres.map(el => el.name + '  ')}</p>\n      <div>\n        <h4>Additional info</h4>\n        <ul>\n          <li style={{ cursor: 'pointer', color: 'blue' }}>\n            <Link to={collectInfo('cast')} state={{ from: `/movies/${id}` }}>\n              Cast\n            </Link>\n          </li>\n          <li style={{ cursor: 'pointer', color: 'blue' }}>\n            <Link to={collectInfo('reviews')} state={{ from: `/movies/${id}` }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </div>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default MovieDetails;\n"],"names":["styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","END_POINT","getApiData","url","params","config","method","baseURL","api_key","query","page","responseType","axios","response","id","useParams","useState","movie","setMovie","location","useLocation","backLink","state","from","getMoviesDetails","data","alert","collectInfo","place","pathname","includes","replace","useEffect","to","size","color","original_title","src","poster_path","alt","vote_average","overview","genres","map","el","name","style","cursor"],"sourceRoot":""}