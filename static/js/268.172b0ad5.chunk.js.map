{"version":3,"file":"static/js/268.172b0ad5.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/StyledLink/StyledLink.jsx","helpers/helpers.js","components/Search/Search.jsx","hooks/usePagination.js","components/Pagination/pagination.styled.js","components/Pagination/Pagination.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport StyledLink from 'components/StyledLink/StyledLink';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <StyledLink\n          key={movie.id}\n          to={`/movies/${movie.id}`}\n          state={{ from: location }}\n        >\n          {movie.original_title}\n        </StyledLink>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default MoviesList;\n","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledNavLink = styled(NavLink)`\n  color: #ffffff;\n  display: block;\n  width: max-content;\n  padding: 10px;\n\n  text-transform: uppercase;\n  text-decoration: none;\n  font-weight: 900;\n  font-size: 18px;\n  line-height: 1.22;\n  text-align: center;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  width: max-content;\n  padding: 10px;\n  color: orange;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport default StyledNavLink;\n","import axios from 'axios';\n\nconst END_POINT = 'https://api.themoviedb.org/3';\n\nasync function getApiData(url = '/trending/movie/day?', params) {\n  const config = {\n    url: url,\n    method: 'get',\n    baseURL: END_POINT,\n    params: {\n      api_key: '3fc6ca0bd9b1eeabb3151f08c61a1e25',\n      query: '',\n      page: 1,\n      ...params,\n    },\n    responseType: 'json',\n  };\n  try {\n    const response = await axios(config);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default getApiData;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ startSearch }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const onChange = e => {\n    setInputValue(e.target.value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    startSearch(inputValue);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <label>\n        <input\n          autoComplete=\"off\"\n          name=\"search\"\n          autoFocus\n          placeholder=\"search movies\"\n          type=\"text\"\n          onChange={onChange}\n          value={inputValue}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </label>\n    </form>\n  );\n};\nSearch.propTypes = {\n  startSearch: PropTypes.func.isRequired,\n};\nexport default Search;\n","import { useMemo } from 'react';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  /*\n  \tCreate an array of certain length and set the elements within it from\n    start value to end value.\n  */\n  return Array.from({ length }, (_, idx) => idx + start);\n};\nexport const DOTS = '...';\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage\n    //+ lastPage + currentPage + 2 * DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      Case 1:\n      If the number of pages is less than the page numbers we\n       want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    /*\n    \tCalculate left and right sibling index and make sure they are\n         within range 1 and totalPageCount\n    */\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not show dots just when there is just one page number to be inserted between the extremes \n      of sibling and the page limits i.e 1 and totalPageCount. \n      Hence we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    /*\n    \tCase 2: No left dots to show, but rights dots to be shown\n    */\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    /*\n    \tCase 3: No right dots to show, but left dots to be shown\n    */\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    /*\n    \tCase 4: Both left and right dots to be shown\n    */\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const PaginationList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: 65px;\n\n  font-size: 18px;\n  line-height: 1.22;\n\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const PaginatedItem = styled(Link)`\n  padding: 6px 12px;\n  cursor: pointer;\n  color: orange;\n  &:hover {\n    box-shadow: 0 0 5px #1eb92b, 0 0 10px #1eb92b, 0 0 15px #1eb92b,\n      0 0 20px #1eb92b, 0 0 15px #ffffff, 0 0 30px #ffffff, 0 0 20px #ffffff,\n      0 0 5px #ffffff;\n\n    transform: scale(1.05, 1.05);\n    border-radius: 10px 0px;\n  }\n`;\n\nexport const ActiveItem = styled(PaginatedItem)`\n  box-shadow: 0 0 5px #1eb92b, 0 0 10px #1eb92b, 0 0 15px #1eb92b,\n    0 0 20px #1eb92b, 0 0 15px #ffffff, 0 0 30px #ffffff, 0 0 20px #ffffff,\n    0 0 5px #ffffff;\n`;\n","import { FaForward, FaBackward } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nimport { usePagination, DOTS } from 'hooks/usePagination';\nimport { PaginationList, PaginatedItem, ActiveItem } from './pagination.styled';\n\nconst Pagination = ({ totalCount, pageSize, currentPage, query, location }) => {\n  const paginationRange = usePagination({\n    totalCount,\n    pageSize,\n    siblingCount: 1,\n    currentPage,\n  });\n  // If there are less than 2 times in pagination range we shall not render the component\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n  return (\n    <PaginationList>\n      {/* Left navigation arrow */}\n      <PaginatedItem\n        key={'left'}\n        style={\n          currentPage === 1\n            ? { pointerEvents: 'none' }\n            : { pointerEvents: 'auto' }\n        }\n        to={`/movies?query=${query}&page=${currentPage - 1}`}\n        state={{ from: location }}\n        end\n      >\n        <FaBackward />\n      </PaginatedItem>\n      {paginationRange.map(pageNumber => {\n        // If the pageItem is a DOT, render the DOTS unicode character\n        if (pageNumber === DOTS) {\n          return <PaginatedItem>&#8230;</PaginatedItem>;\n        }\n        if (pageNumber === currentPage) {\n          return (\n            <ActiveItem\n              key={pageNumber}\n              to={`/movies?query=${query}&page=${pageNumber}`}\n              state={{ from: location }}\n            >\n              {pageNumber}\n            </ActiveItem>\n          );\n        }\n        // Render our Page Pills\n        return (\n          <PaginatedItem\n            key={pageNumber}\n            to={`/movies?query=${query}&page=${pageNumber}`}\n            state={{ from: location }}\n          >\n            {pageNumber}\n          </PaginatedItem>\n        );\n      })}\n      {/*  Right Navigation arrow */}\n      <PaginatedItem\n        key={'right'}\n        style={\n          currentPage === lastPage\n            ? { pointerEvents: 'none' }\n            : { pointerEvents: 'auto' }\n        }\n        to={`/movies?query=${query}&page=${currentPage + 1}`}\n        state={{ from: location }}\n      >\n        <FaForward />\n      </PaginatedItem>\n    </PaginationList>\n  );\n};\nPagination.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  query: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n};\nexport default Pagination;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: green;\n  margin: 0 auto;\n  width: fit-content;\n`;\n\nexport const MainMovies = styled.main`\n  background-color: #000000;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { AiOutlineRollback } from 'react-icons/ai';\n\nimport getApiData from 'helpers/helpers';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Search from 'components/Search/Search';\nimport Pagination from 'components/Pagination/Pagination';\nimport { MainMovies } from './Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchData, setSearchData] = useState(null);\n  const [page, setPage] = useState(null);\n  const [query, setQuery] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const loadData = async () => {\n    const page = searchParams.get('page');\n    const query = searchParams.get('query');\n\n    if (!query) {\n      return;\n    }\n    try {\n      setQuery(query);\n      const response = await getApiData('search/movie', { query, page });\n      setSearchData(response.data);\n    } catch (error) {\n      alert(error);\n    }\n    setPage(Number(page));\n  };\n\n  const startSearch = inputValue => {\n    setSearchParams({ query: inputValue, page: 1 });\n  };\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, [location]);\n\n  return (\n    <MainMovies>\n      <Link to={-1}>\n        {<AiOutlineRollback size={'60px'} color={'orange'} />}\n      </Link>\n      <Search startSearch={startSearch} />\n      <h1>Movies</h1>\n      {searchData && (\n        <>\n          <MoviesList movies={searchData.results} />\n          <Pagination\n            totalCount={searchData.total_results}\n            pageSize={20}\n            currentPage={page}\n            location={location}\n            query={query}\n          />\n        </>\n      )}\n    </MainMovies>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","original_title","StyledNavLink","styled","NavLink","Link","END_POINT","getApiData","url","params","config","method","baseURL","api_key","query","page","responseType","axios","response","startSearch","useState","inputValue","setInputValue","onSubmit","e","preventDefault","autoComplete","name","autoFocus","placeholder","type","onChange","target","value","range","start","end","length","Array","_","idx","DOTS","PaginationList","PaginatedItem","ActiveItem","totalCount","pageSize","currentPage","paginationRange","siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","style","pointerEvents","pageNumber","MainMovies","searchData","setSearchData","setPage","setQuery","useSearchParams","searchParams","setSearchParams","loadData","get","data","alert","Number","useEffect","size","color","MoviesList","results","total_results"],"sourceRoot":""}