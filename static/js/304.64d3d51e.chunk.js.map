{"version":3,"file":"static/js/304.64d3d51e.chunk.js","mappings":"wKA6BA,IAzBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAAC,IAAD,CAEEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAHjB,SAKGG,EAAMK,gBAJFL,EAAME,GAFE,KAWtB,C,4DChBKI,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iSAkBOA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+IAWvB,K,qFC9BMG,EAAY,+BAEHC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAA0BC,EAA1B,+BAAgC,uBAAwBC,EAAxD,uBACQC,EAAS,CACbF,IAAKA,EACLG,OAAQ,MACRC,QAASN,EACTG,QAAO,QACLI,QAAS,mCACTC,MAAO,GACPC,KAAM,GACHN,GAELO,aAAc,QAXlB,kBAc2BC,IAAMP,GAdjC,cAcUQ,EAdV,yBAeWA,GAfX,+HAqBA,IAvBA,WAEeX,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,kKCFFY,EAAQhB,EAAAA,GAAAA,GAAH,mFAMLiB,EAAWjB,EAAAA,GAAAA,KAAH,sD,SCoBrB,EAvBa,WACX,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe8B,EAAf,KAEMC,EAAS,mCAAG,gHAEShB,EAAAA,EAAAA,KAFT,gBAENiB,EAFM,EAENA,KACRF,EAAUE,EAAKC,SAHD,gDAKdC,MAAM,EAAD,IALS,yDAAH,qDAaf,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,GACD,GAAE,KAGD,UAACH,EAAD,YACE,SAACD,EAAD,8BACA,SAACS,EAAA,EAAD,CAAYpC,OAAQA,MAGzB,C","sources":["components/MoviesList/MoviesList.jsx","components/StyledLink/StyledLink.jsx","helpers/helpers.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport StyledLink from 'components/StyledLink/StyledLink';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <StyledLink\n          key={movie.id}\n          to={`/movies/${movie.id}`}\n          state={{ from: location }}\n        >\n          {movie.original_title}\n        </StyledLink>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default MoviesList;\n","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledNavLink = styled(NavLink)`\n  color: #ffffff;\n  display: block;\n  width: max-content;\n  padding: 10px;\n\n  text-transform: uppercase;\n  text-decoration: none;\n  font-weight: 900;\n  font-size: 18px;\n  line-height: 1.22;\n  text-align: center;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  width: max-content;\n  padding: 10px;\n  color: orange;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport default StyledNavLink;\n","import axios from 'axios';\n\nconst END_POINT = 'https://api.themoviedb.org/3';\n\nasync function getApiData(url = '/trending/movie/day?', params) {\n  const config = {\n    url: url,\n    method: 'get',\n    baseURL: END_POINT,\n    params: {\n      api_key: '3fc6ca0bd9b1eeabb3151f08c61a1e25',\n      query: '',\n      page: 1,\n      ...params,\n    },\n    responseType: 'json',\n  };\n  try {\n    const response = await axios(config);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default getApiData;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: green;\n  margin: 0 auto;\n  width: fit-content;\n`;\n\nexport const MainHome = styled.main`\n  background-color: #000000;\n`;\n","import { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport getApiData from 'helpers/helpers';\nimport { MainHome, Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  const getMovies = async () => {\n    try {\n      const { data } = await getApiData();\n      setMovies(data.results);\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <MainHome>\n      <Title>Trending Today</Title>\n      <MoviesList movies={movies} />\n    </MainHome>\n  );\n};\nexport default Home;\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","original_title","StyledNavLink","styled","NavLink","Link","END_POINT","getApiData","url","params","config","method","baseURL","api_key","query","page","responseType","axios","response","Title","MainHome","useState","setMovies","getMovies","data","results","alert","useEffect","MoviesList"],"sourceRoot":""}